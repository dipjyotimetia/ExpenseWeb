swagger: '2.0'
info:
  description: Account Api
  version: 2.0.0
  title: Account API
  contact:
    email: dipjyotimetia@gmail.com
host: localhost:3002
tags:
  - name: users
    description: Users details
schemes:
  - http
securityDefinitions:
  Bearer:
    type: apiKey
    in: header
    name: Authorization
    description: "jwt bearer token"
paths:
  /api/users:
    post:
      tags:
        - users
      summary: Create new user account
      description: Adds an new user to the system
      operationId: addUsers
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: userItem
          description: User account to add
          required: false
          schema:
            $ref: '#/definitions/UserItem'
      responses:
        '201':
          description: user created
        '400':
          description: 'User already exists'
  /api/users/login:
    post:
      tags:
        - users
      summary: Login User
      description: By passing username and password login a user
      operationId: loginUsers
      produces:
        - application/json
      parameters:
        - in: body
          name: loginUser
          description: User account login
          required: true
          schema:
            $ref: '#/definitions/LoginItem'
      responses:
        '200':
          description: logged in user
        '400':
          description: invalid user details
  /api/users/me:
    get:
      tags:
        - users
      security:
        - Bearer: []
      summary: User Info
      description: By passing bearer token get login info
      operationId: infoUsers
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: search results matching criteria
        '400':
          description: bad input parameter 
  /api/users/me/logout:
    post:
      tags:
        - users
      security:
        - Bearer: []  
      summary: Logout user
      description: By passing bearer token to logout user
      operationId: logoutUser
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: search results matching criteria
        '500':
          description: bad input parameter
  /api/users/me/logoutall:
    post:
      tags:
        - users
      security:
        - Bearer: []  
      summary: Logout all user session
      description: By passing bearer token logout all users active session
      operationId: logoutAllSession
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: search results matching criteria
        '500':
          description: bad input parameter
definitions:
  UserItem:
    type: object
    required:
      - email
      - firstName
      - lastName
      - password
      - userName
    properties:
      firstName:
        type: string
        example: firstname
      lastName:
        type: string
        example: lastname
      username:
        type: string
        example: username
      email:
        type: string
        example: email@gmail.com
      password:
        type: string
        example: Password1
  LoginItem:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
        example: email@gmail.com
      password:
        type: string
        example: Password1      